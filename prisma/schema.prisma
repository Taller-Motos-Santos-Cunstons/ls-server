generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  documentNumber String   @unique @db.VarChar(20)
  fullName       String   @db.VarChar(100)
  lastName       String   @db.VarChar(100)
  email          String   @unique @db.VarChar(255)
  password       String   @db.VarChar(255)
  gender         Gender
  role           Roles
  status         Status
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  municipalityId String?
  documentTypeId String?

  // Relaciones
  Municipality Municipal?    @relation(fields: [municipalityId], references: [id])
  DocumentType DocumentType? @relation(fields: [documentTypeId], references: [id])
  Motorcycle   Motorcycle[]
  Citation     Citation[]

  @@unique([documentNumber, email])
  @@index([municipalityId, status, documentTypeId])
}

model Municipal {
  id           String  @id @default(uuid())
  name         String  @unique @db.VarChar(100)
  status       Status
  departmentId String?

  // Relaciones
  users      User[]
  department Departments? @relation(fields: [departmentId], references: [id])
  Branch     Branch[]

  @@index([departmentId])
}

model Departments {
  id             String      @id @default(uuid())
  name           String      @unique @db.VarChar(100)
  municipalities Municipal[]
}

model DocumentType {
  id           String @id @default(uuid())
  name         String @unique @db.VarChar(50)
  abbreviation String @unique @db.VarChar(10)

  // Relaciones 
  users   User[]
  clients Client[]
}

model Client {
  id             String  @id @default(uuid())
  documentNumber String  @unique @db.VarChar(20)
  fullName       String  @db.VarChar(100)
  phone          String  @db.VarChar(15)
  email          String  @unique @db.VarChar(255)
  documentTypeId String?

  // Relaciones
  DocumentType DocumentType? @relation(fields: [documentTypeId], references: [id])
  Citation     Citation[]
}

model Motorcycle {
  id                String  @id @default(uuid())
  numberSerie       String  @unique @db.VarChar(50)
  mark              String  @db.VarChar(50)
  model             String  @db.VarChar(50)
  numberPlate       String  @unique @db.VarChar(10)
  cm_cubics         Int     @default(0) @db.Integer
  colors            String  @db.VarChar(50)
  userId            String?
  displacementTypId String?
  motorTypeId       String?

  // Relaciones
  User            User?            @relation(fields: [userId], references: [id])
  DisplacementTyp DisplacementTyp? @relation(fields: [displacementTypId], references: [id])
  MotorType       MotorType?       @relation(fields: [motorTypeId], references: [id])
  Citation        Citation[]

  @@index([userId, numberSerie])
}

model DisplacementTyp {
  id   String @id @default(uuid())
  name String @unique @db.VarChar(50)

  Motorcycle Motorcycle[]
}

model MotorType {
  id   String @id @default(uuid())
  name String @unique @db.VarChar(50)

  Motorcycle Motorcycle[]
}

model Citation {
  id           String   @id @default(uuid())
  dateTime     DateTime
  description  String   @db.VarChar(255)
  userId       String?
  clientId     String?
  motorcycleId String?
  workshopId   String?

  // Relaciones
  Client      Client?       @relation(fields: [clientId], references: [id])
  User        User?         @relation(fields: [userId], references: [id])
  Motorcycle  Motorcycle?   @relation(fields: [motorcycleId], references: [id])
  Workshop    Workshop?     @relation(fields: [workshopId], references: [id])
  Maintenance Maintenance[]

  @@index([userId, clientId, motorcycleId, dateTime])
}

model Workshop {
  id       String  @id @default(uuid())
  name     String  @unique @db.VarChar(100)
  branchId String?

  // Relaciones
  Citation    Citation[]
  Maintenance Maintenance[]
  Branch      Branch?       @relation(fields: [branchId], references: [id])
}

model Maintenance {
  id            String   @id @default(uuid())
  datePerformed DateTime
  description   String   @db.VarChar(255)
  cost          Decimal  @db.Decimal(10, 2)
  warrantyDate  DateTime
  citationId    String?
  workshopId    String?

  // Relaciones
  Citation     Citation?      @relation(fields: [citationId], references: [id])
  Workshop     Workshop?      @relation(fields: [workshopId], references: [id])
  AssignedPart AssignedPart[]

  @@index([workshopId, datePerformed])
}

model Branch {
  id             String  @id @default(uuid())
  name           String  @db.VarChar(45)
  phone          String  @db.VarChar(45)
  address        String  @db.VarChar(45)
  municipalityId String? @db.VarChar(36)

  // Relaciones
  Municipality Municipal?  @relation(fields: [municipalityId], references: [id])
  Workshop     Workshop[]
  Inventory    Inventory[]

  @@index([municipalityId])
}

model Inventory {
  id          String   @id @default(uuid())
  quantity    Int
  status      Status
  dateEntered DateTime
  productId   String?

  // Relaciones
  Product  Product?   @relation(fields: [productId], references: [id])
  Branch   Branch?    @relation(fields: [branchId], references: [id])
  branchId String?
  Movement Movement[]

  @@index([productId])
}

model Movement {
  id           String       @id @default(uuid())
  inventoryId  String
  movementType MovementType
  description  String       @db.Text
  date         DateTime     @db.Timestamp

  // Relaciones
  Inventory Inventory @relation(fields: [inventoryId], references: [id])

  @@index([inventoryId])
}

model Product {
  id          String           @id @default(uuid())
  name        String           @db.VarChar(45)
  description String           @db.VarChar(255)
  stock       Int
  unitPrice   Decimal          @db.Decimal(10, 2)
  productType ProductType
  condition   ProductCondition
  status      ProductStatus

  // Relaciones 
  Inventory    Inventory[]
  AssignedPart AssignedPart[]

  @@index([status])
  @@index([productType])
}

model AssignedPart {
  id            String  @id @default(uuid())
  maintenanceId String
  productId     String
  quantity      Int
  unitPrice     Decimal @db.Decimal(10, 2)
  totalPrice    Decimal @db.Decimal(10, 2)

  // Relaciones
  Maintenance Maintenance @relation(fields: [maintenanceId], references: [id])
  Product     Product     @relation(fields: [productId], references: [id])
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Roles {
  ADMIN
  EMPLOYEE
}

enum InventoryStatus {
  AVAILABLE
  UNAVAILABLE
  UNDER_REPAIR
  PENDING
}

enum ProductType {
  REPLACEMENT
  SERVICE
  ACCESSORY
  MATERIAL
}

enum ProductCondition {
  NEW
  USED
}

enum ProductStatus {
  AVAILABLE
  UNAVAILABLE
  UNDER_REPAIR
}

enum MovementType {
  ENTRY
  EXIT
}
